<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAC19JREFUeF7t
        nV9vFNcdhvkYNVGbCBOuYhLcqBdtKvEtSquminJVNYKmKlQ2SdDGu3YqWDv2ZjHIMUnIVSIsiyiLcmkT
        oQq1BCnuxkH5Mu3M6CwC83q9f87xzv5+zyM9Fwkw43mZ886cM7PLEQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwy+nTFcRSConIwv3HN98svHTl
        yu6RSuV/iGX0ZzMzP5xZXb1W2d6eC2cuDEU28H+1unpfhY1YZidmZh6d3dhYDGcy9Mvpzz77VgWLOE7+
        4tKlduXu3Wo4raEXuOqjNV9bX78XTm/oxqtXrz5QASKOu9ONxr/CaQ4Krvxo3V+vrX0bTnd4Eub86EYe
        Ge4hD0QFhWjQFyqVh+HMhxxu/dGbF1qt+XD6O4erPzp0YnZ2J4wA51AA6FTeD8iYqtfbKhxE6565fr0Z
        hoFTuPqjY5kGUADo3XwMuIUCQO9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIU
        RC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIU
        RC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIU
        RC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIURC9SACIU
        RC9SACIURC9SACIURC9SACIURC9SACIURC9SACIU405Wq+23bt1qVra2arnnNjeb2f97pH6vRY/Xaj++
        fft283yrVRx/nsWxuTk3x/+UFIAIxagnPvignZ3w+/6F57+WDY5d9WctmB9bD8ffVn/WrBSACMWgU/X6
        w3DUB/LK8vJDtY1xtjimHplaXDR3/PtKAYhQjHliYaEdjrhnTjUa36ltjaPTjUbPg7/Di/PzP6htmZMC
        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
        QISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUK
        QISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUKQISC6EUK
        QISC6EUKQISC6EUKQISC6EXXBZAxMTPzkwwG0bgTs7M7YRj45Xerq+sqHETr/mFt7VoYBn4532rVVDiI
        1r3Qas2HYeAbpgHozaMXL+6G0x/ObW4uqZAQrfrXr76qh9Mfcp57991dFRSiNX/+3nss/u2lsrXFWgC6
        sLK9PRdOe3iS3964cU8FhmjF36yt3QunOyimP/rovgoOcdx9tdm8H05z6MZr6+vcCaApi3MaeiefJ71Q
        qbRVmIjj4vOXLn3PnH8I/v7115ePXrz4SIWLWFafe+ed3b/xqC8elbt3q7+/fn1tYnb2RxU44qg9Ojvb
        PrO6ei0/V8NpC0nIP0GFWDYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwC5HjvwfQJM4SkAtNmsAAAAASUVORK5CYII=
</value>
  </data>
</root>